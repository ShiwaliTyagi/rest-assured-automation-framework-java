# This file contains all reusable components/schemas.
# It is referenced by main-spotify-api.yaml and individual operation files.

components:
  schemas:
    # Reusable schema for a full Spotify Playlist Object
    PlaylistObject:
      type: object
      description: A Spotify playlist object.
      properties:
        collaborative:
          type: boolean
          description: True if the owner allows other users to modify the playlist.
        description:
          type: string
          nullable: true
          description: The playlist description. Only returned for modified, verified playlists, otherwise `null`.
        external_urls:
          $ref: "#/components/schemas/ExternalUrlObject"
        followers:
          $ref: "#/components/schemas/FollowersObject"
        href:
          type: string
          format: uri
          description: A link to the Web API endpoint for this playlist.
        id:
          type: string
          description: The Spotify ID for the playlist.
        images:
          type: array
          description: Images for the playlist. The array may be empty or contain up to three images.
          items:
            $ref: "#/components/schemas/ImageObject"
        name:
          type: string
          description: The name of the playlist.
        owner:
          $ref: "#/components/schemas/PublicUserObject"
        primary_color:
          type: string
          nullable: true
          description: The primary color of the playlist. This is a hex code or `null`.
        public:
          type: boolean
          nullable: true # Can be null if the playlist status is not relevant
          description: The playlist's public/private status (if it is added to the user's profile).
        snapshot_id:
          type: string
          description: The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version.
        tracks:
          $ref: "#/components/schemas/PagingPlaylistTrackObject"
        type:
          type: string
          enum: [playlist]
          description: The object type.
        uri:
          type: string
          description: The Spotify URI for the playlist.

    # Reusable schema for a simplified Spotify Playlist Object (often in lists)
    SimplifiedPlaylistObject:
      type: object
      description: A simplified Spotify playlist object.
      properties:
        collaborative:
          type: boolean
        description:
          type: string
          nullable: true
        external_urls:
          $ref: "#/components/schemas/ExternalUrlObject"
        href:
          type: string
          format: uri
        id:
          type: string
        images:
          type: array
          items:
            $ref: "#/components/schemas/ImageObject"
        name:
          type: string
        owner:
          $ref: "#/components/schemas/PublicUserObject"
        public:
          type: boolean
          nullable: true
        snapshot_id:
          type: string
        tracks: # Simplified track info in simplified playlist object
          type: object
          properties:
            href:
              type: string
              format: uri
            total:
              type: integer
        type:
          type: string
          enum: [playlist]
        uri:
          type: string

    # Reusable schema for a Spotify Public User Object
    PublicUserObject:
      type: object
      description: A Spotify user object (public details).
      properties:
        display_name:
          type: string
          nullable: true
          description: The name displayed on the user's profile. `null` if not available.
        external_urls:
          $ref: "#/components/schemas/ExternalUrlObject"
        followers:
          $ref: "#/components/schemas/FollowersObject"
        href:
          type: string
          format: uri
          description: A link to the Web API endpoint for this user.
        id:
          type: string
          description: The Spotify user ID for this user.
        images:
          type: array
          description: The user's profile image.
          items:
            $ref: "#/components/schemas/ImageObject"
        type:
          type: string
          enum: [user]
        uri:
          type: string

    # Reusable schema for a Spotify Image Object
    ImageObject:
      type: object
      description: An image object.
      properties:
        url:
          type: string
          format: uri
          description: The source URL of the image.
        height:
          type: integer
          nullable: true
          description: The image height in pixels. If `null`, the height is unknown.
        width:
          type: integer
          nullable: true
          description: The image width in pixels. If `null`, the width is unknown.

    # Reusable schema for a Spotify Followers Object
    FollowersObject:
      type: object
      description: Information about the followers of a resource.
      properties:
        href:
          type: string
          nullable: true # Always set to null in the Web API for this object.
          description: A link to the Web API endpoint providing full details of the followers; `null` if not available.
        total:
          type: integer
          description: The total number of followers.

    # Reusable schema for a Spotify External URL Object
    ExternalUrlObject:
      type: object
      description: External URLs for this object.
      properties:
        spotify:
          type: string
          format: uri
          description: The Spotify URL for the object.

    # Reusable schema for a Paging Object containing PlaylistTrackObjects
    PagingPlaylistTrackObject:
      type: object
      description: A Paging object for playlist tracks.
      properties:
        href:
          type: string
          format: uri
          description: A link to the Web API endpoint returning the full result of the request.
        limit:
          type: integer
          description: The maximum number of items in the response (as set in the query or by default).
        next:
          type: string
          nullable: true
          format: uri
          description: URL to the next page of items. (`null` if none).
        offset:
          type: integer
          description: The offset of the items returned (as set in the query or by default).
        previous:
          type: string
          nullable: true
          format: uri
          description: URL to the previous page of items. (`null` if none).
        total:
          type: integer
          description: The total number of items available to return.
        items:
          type: array
          description: The items of the playlist. Can be an empty array.
          items:
            $ref: "#/components/schemas/PlaylistTrackObject" # References the PlaylistTrackObject

    # Reusable schema for a Spotify Playlist Track Object
    PlaylistTrackObject:
      type: object
      description: A track object in a playlist.
      properties:
        added_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time the track or episode was added.
        added_by:
          $ref: "#/components/schemas/PublicUserObject" # The user who added the track
        is_local:
          type: boolean
          description: Whether this track or episode is a local file or not.
        track: # The actual Track or Episode object
          $ref: "#/components/schemas/TrackObject" # You might want to expand this further!

    # A very simplified Track Object.
    # NOTE: Spotify's full TrackObject is much more complex (album, artists, duration_ms, etc.).
    # Expand this if you need deeper validation of the track content.
    TrackObject:
      type: object
      description: A Spotify track object (simplified for this spec).
      properties:
        id:
          type: string
          description: The Spotify ID for the track.
        name:
          type: string
          description: The name of the track.
        href:
          type: string
          format: uri
          description: A link to the Web API endpoint for this track.
        uri:
          type: string
          description: The Spotify URI for the track.
        type:
          type: string
          enum: [track]
          description: The object type.
        # ... you would add more properties here as needed (album, artists, duration_ms, etc.)
